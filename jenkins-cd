pipeline {
    agent any

    parameters {
        choice(name: 'action', choices: 'create\ndestroy\ndestroyekscluster', description: 'Create/Update or destroy the eks cluster') 
        string(name: 'cluster', defaultValue: 'sai-cluster', description: 'Eks cluster name') 
        string(name: 'region', defaultValue: 'us-east-1', description: 'Eks cluster region')
    }

    environment {
        ACCESS_KEY = credentials('aws_access_key_id')
        SECRET_KEY = credentials('aws_secret_access_key')
    }

    stages {
        stage('git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Saikrish96769/java-app.git'
            }
        }

        stage('eks deployments') {
            when {
                expression {
                    params.action == 'create'
                }
            }
            steps {
                script {
                    def apply = false
                    try {
                        input message: 'Please confirm the apply to initiate the deployments', ok: 'Ready to apply the config'
                        apply = true
                    } catch(err) {
                        apply = false
                        CurrentBuild.result = 'UNSTABLE'
                    }
                    if (apply) {
                        def kubectl = "/opt/homebrew/bin/kubectl" // Replace with the actual path to the Docker executable on your macOS machine
                        dir('/Users/saikrish/.jenkins/workspace/java-deploy') { 
                        sh """
                            ${kubectl} apply -f .
                        """
                    }
                }
            }
        }

        stage('Delete deployments') {
            when {
                expression {
                    params.action == 'destroy'
                }
            }
            steps {
                script {
                    def destroy = false
                    try {
                        input message: 'Please confirm the destroy to delete the deployments', ok: 'Ready to destroy the config'
                        destroy = true
                    } catch(err) {
                        destroy = false
                        CurrentBuild.result = 'UNSTABLE'
                    }
                    if (destroy) {
                        def kubectl = "/opt/homebrew/bin/kubectl" // Replace with the actual path to the Docker executable on your macOS machine
                        dir('/Users/saikrish/.jenkins/workspace/java-deploy') { 
                        sh """
                            ${kubectl} delete -f .
                        """
                    }
                }
            }
        }
    }
}
